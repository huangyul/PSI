@{
    Layout = null;
}
@using ShiRuan.AEMS.Cloud.Comm
@using ShiRuan.HR.Model;
@using ShiRuan.ORM;
@using ShiRuan.AEMS.Cloud.Model.System;
@model List<SysModule>
<!DOCTYPE html>

<html style="background-color:#F4F6F8;">
<head>
    <title>@ViewBag.PageTitle</title>
    @Html.Partial("~/Views/Shared/Header.cshtml")

    <link rel="stylesheet" href="~/Content/css/AdminLTE.min.css?ver=2.4.8.1.1">
    <link rel="stylesheet" href="~/Content/css/skins/skin-yw.css?ver=2.4.8.1.1">
    <script src="~/Content/js/stomp-2.3.3.min.js"></script>
    <script src="~/Content/js/adminlte.min.js?ver=2.4.8.1.1"></script>
    <script src="~/Content/js/app.js?ver=2.4.8.1.1"></script>
    <script src="~/Content/js/app_iframe.js?ver=2.4.8.1.1"></script>
    <script src="~/Content/js/ripple.js?ver=2.4.8.1.1"></script>
    <style>
        .task-box {
            transform: translateX(-50%);
            box-sizing: border-box;
            position: absolute;
            z-index: 2001;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .task2 {
            border: 2px solid #ffffff;
            display: flex;
            justify-content: center;
            align-items: center;
            background: #60acf4;
            color: #ffffff;
            border-radius: 4px;
        }

        .task-tips {
            border-radius: 9px;
            padding: 1px 10px;
            box-sizing: border-box;
            line-height: 20px;
            height: 20px;
            background: #f9c02e;
            font-weight: normal;
            margin-left: 4px;
        }

        .bubble1 {
            background: #fff;
            max-width: 350px;
            min-width: 250px;
            padding: 10px 15px;
            border-radius: 4px;
            position: relative;
            margin-top: 10px;
        }

            .bubble1 .btn {
                border: none;
                padding: 3px 10px;
                font-size: 14px;
                background: #579ff6;
                color: #fff;
                border-radius: 4px;
                float: right;
            }

            .bubble1::before {
                content: " ";
                border-top: 0px solid rgba(0,0,0,0);
                border-left: 10px solid rgba(0,0,0,0);
                border-right: 10px solid rgba(0,0,0,0);
                border-bottom: 10px solid #ffffff;
                left: 50%;
                top: -10px;
                position: absolute;
                transform: translateX(-50%);
            }

        .title-arrow {
            position: relative;
        }

            .title-arrow:before {
                position: absolute;
                right: 10px;
                top: 50%;
                transform: translateY(-50%);
            }

        .secondLayer .menu-item {
            border-bottom: 1px solid #E6E6E6;
        }
    </style>
</head>
<body class="hold-transition skin-yw sidebar-mini fixed">
    <form style="height:100%;">
        <div class="wrapper" style="display:flex;;height: 100vh;overflow:hidden;">
            <!-- 头部 -->
            <header class="main-header" style="position: initial">
                <div class="top-header">
                    <div class="top-header-con">

                        @if (ViewBag.IsCustomerService == 1)
                        {
                            <img src="/Content/images/logo.png" style="width:85px;" onclick="showOrgBuilder()">

                            <span class="top-header-text1" id="spanCompany" style="display:none; cursor:pointer" onclick="showOrgBuilder()">世软科技</span>
                        }
                        else
                        {
                            <img src="/Content/images/logo.png" style="width:85px;" onclick="logout()">

                            <span class="top-header-text1" id="spanCompany" style="display:none;">世软科技</span>
                        }
                    </div>
                    <!--bootstrap tab风格 多标签页-->
                    <div class="content-tabs" style="align-self: flex-end;">
                        <!-- 向前 -->
                        <button class="roll-nav roll-left tabLeft" onclick="scrollTabLeft()" style="display:none;">
                            <i class="fa fa-angle-left"></i>
                        </button>
                        <!-- tab部分 -->
                        <nav class="page-tabs menuTabs tab-ui-menu yw-tab-nav" id="tab-menu">
                            <div class="page-tabs-content" style="margin-left: 0px;">

                            </div>
                        </nav>
                        <!-- 向后 -->
                        <button class="roll-nav roll-right tabRight" onclick="scrollTabRight()" style="display:none;">
                            <i class="fa fa-angle-right" style="margin-left: 3px;"></i>
                        </button>
                    </div>

                    <button type="button" class="close-all" onclick="closeOtherTabs(true)">全部关闭</button>

                    <div class="navbar-custom-menu">
                        <ul class="nav navbar-nav">
                            <!-- 消息推送 -->
                            <li class="dropdown notifications-menu">
                                <a onclick="showWorkflows()" class="dropdown-toggle  ripple-effect" data-toggle="dropdown">
                                    <span class="fa navbar-msg" id="spanApprove">审批</span>
                                    <span class="label" id="span_wfCount">0</span>
                                </a>
                            </li>

                            <!-- 消息推送 -->
                            <li class="dropdown notifications-menu task-li">
                                <a onclick="showNotices()" class="dropdown-toggle  ripple-effect" data-toggle="dropdown">
                                    <span class="fa navbar-msg" id="spanNotice">任务</span>
                                    <span class="label" id="messageID">4</span>
                                </a>

                            </li>
                            @*帮助吐槽*@
                            <li class="dropdown notifications-menu">
                                <a class="dropdown-toggle  ripple-effect" id="isshow_tucao" data-toggle="dropdown">
                                    <i class="icon_tip_w" title=""></i>
                                    <span class="fa navbar-msg" id="spanHelp">帮助</span>
                                </a>
                            </li>

                            <!-- 个人登录信息 -->
                            <li class="dropdown user user-menu">

                                <a href="#" class="dropdown-toggle  navbar-user  ripple-effect" onclick="showSelect(this)">
                                    <span class="hidden-xs hidden-sm hidden-md">@SessionCommData.User.LoginEmployee.Name</span>
                                    <span class="icon-icn-trangle-down trangle" id="trangle-remove"></span>
                                </a>
                                <ul class="dropdown-menu">
                                    <!-- User image -->
                                    <li class="user-header" style="background:#ffffff;">
                                        @if (ViewBag.IsCustomerService == 1)
                                        {
                                            <div class="user_name user_line1" onclick="showCustomerServiceCenter()">@SessionCommData.User.LoginEmployee.Name</div>
                                        }
                                        else
                                        {
                                            <div class="user_name user_line1">@SessionCommData.User.LoginEmployee.Name</div>
                                        }

                                        <div class="user_text user_line2"><span id="spanAccount">登录账户：</span>@SessionCommData.User.LoginEmployee.AccountCode</div>
                                        <!--公司名称同时显示于title-->
                                        <div class="user_text user_line2 ellipsis" title=""><span id="spanOwnerOrg">所属组织：</span>@SessionCommData.LoginOrganization.Name</div>
                                        @if (SessionCommData.LoginOrganization.OrganizationType == 1)
                                        {
                                            <div class="user_text user_line2 ellipsis" title=""><span id="spanStoreID">门店ID：</span>@SessionCommData.LoginOrganization.StoreID</div>
                                        }
                                    </li>
                                    <li class="user-main clearfix">
                                        <div class="user-main_left ">
                                            <div class="user_text center user_line2 user_text_exceed" id="divSysName">云后台</div>
                                            <div class="user_text center user_line3 user_text_exceed" id="BindText">未绑定微信</div>
                                            <div class="user_btn_s user_btn_green  ripple-effect" data-bind="1" id="SelectWXBind">立即绑定</div>
                                        </div>
                                        <div class="user-main_right">
                                            <div class="user_text center user_line2 user_text_exceed" id="divBindPhone"> 绑定手机号码 </div>
                                            <div class="user_text center user_line3 user_text_exceed"><span id="SpanTel">@SessionCommData.User.LoginEmployee.Telphone</span></div>
                                            <div class="user_btn_s user_btn_red  ripple-effect" id="ChangTel">更换号码</div>
                                        </div>
                                    </li>
                                    <!-- Menu Footer-->
                                    <li class="user-footer">
                                        <div class="clearfix  user_line4 select_text_box">
                                            <span class="user_text" id="spanLogOrg">登录组织:</span>
                                            <div class="select_text a-right">
                                                <div class="field-select a-left" id="sel_LoginOrg">
                                                    <input id="sel_LoginOrg_text" class="field-select-text" style="font-size:13px;" autocomplete="off" />
                                                    <span class="trangle icon-icn-trangle-down"></span>
                                                    <input type="hidden" id="sel_LoginOrg_value" />
                                                </div>
                                            </div>

                                        </div>

                                        <div class="clearfix  user_line4 select_text_box">
                                            <span class="user_text" id="spanChangeLang">切换语言:</span>
                                            <div class="select_text a-right" onclick="showSelect(this)">
                                                <span id="spanCurLang">简体中文</span><span class="icon-icn-trangle-down trangle"></span>
                                            </div>
                                            <ul>
                                                <li class="ripple-effect swtich-Lang" data-value="zh-CN">简体中文</li>
                                                <li class="ripple-effect swtich-Lang" data-value="zh-TW">繁體中文</li>
                                                <li class="ripple-effect swtich-Lang" data-value="en">English</li>
                                            </ul>
                                        </div>

                                        <div class="user_btn_n user_line2  ripple-effect ripple-dark" id="ChangePWD">修改密码</div>
                                        <div class="user_btn_n user_line2  ripple-effect ripple-dark" onclick="logout();" id="divExit">退出</div>
                                    </li>
                                </ul>
                            </li>
                            <!-- 设置主题 -->
                            <!-- <li>
                          <a href="#" data-toggle="control-sidebar"><i class="fa fa-gears"></i></a>
                        </li> -->
                        </ul>
                        @*帮助吐槽*@
                        <div class="tucao-frame" style="display: none;">
                            <p id="helpCenter">帮助中心</p>
                            <p>
                                <i class="customer"></i>
                                <span id="span_Service">客服：</span>
                                <span id="span_ServiceNo">400-990-6688转1</span>
                            </p>
                            <div class="options" id="Options">
                                <div class="Options-one">
                                    <i class="make"></i>
                                    <span id="span_Feedback">我要吐槽</span>
                                </div>
                                <div class="Options-two">
                                    <i class="renew"></i>
                                    <span style="color: #3ba1ff;" id="span_UpdateLog">系统更新说明</span>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </header>

            <div style="flex: 1;display:flex;min-height: 0;">
                <!-- 侧边导航部分 -->
                <!--<aside class="main-sidebar NavigationGuidelines" style="width: 180px;">
                <section class="sidebar" style="display:none">
                    <ul class="sidebar-menu" data-widget="tree"></ul>
                </section>-->
                <!-- /.sidebar -->
                <!--</aside>-->
                @*三级导航*@
                <div class="threeLevelMenu" style=" padding-top: 12px;">
                    <div id="NavigationGuidelinesBack"></div>
                    <ul class="firstLayer">
                        @if (ViewBag.Modules != null)
                        {
                            foreach (SysModule top in Model.Where(t => (int)t.ModType == 1).OrderBy(t1 => t1.ModIndex))
                            {
                                <li>
                                    <i class="@top.MPath"></i>
                                    <span>@top.ModCnName</span>
                                    <i class="icon-icn-trangle-up"></i>
                                    <ul class="secondLayer" style="display:none;">
                                        @foreach (SysModule secondSub in Model.Where(t => t.ParentID == top.ID).OrderBy(t1 => t1.ModIndex))
                                        {
                                            <li class="menu-item">
                                                <p class="title title-arrow icon-icn-trangle-down">@secondSub.ModCnName</p>
                                                <ul class="thirdLayer" style="display:block">
                                                    @foreach (SysModule thirdSub in Model.Where(t => t.ParentID == secondSub.ID).OrderBy(t1 => t1.ModIndex))
                                                    {
                                                        if (thirdSub.MenuEnName.Equals("StoreReport") && SessionCommData.OrgIsEnableDataUpload)
                                                        {
                                                            continue;
                                                        }
                                                        else if (thirdSub.MenuEnName.Equals("mnuFrmDashesViewer") && !SessionCommData.OrgIsEnableDataUpload && ViewBag.DeployMode == "1")
                                                        {
                                                            continue;
                                                        }
                                                        else
                                                        {
                                                            <li data-modelname="@thirdSub.MenuEnName" onclick="openMenu('@thirdSub.ID','@thirdSub.ModCnName','@thirdSub.UrlPath');">
                                                                <i class="@thirdSub.MPath"></i>
                                                                <span>@thirdSub.ModCnName</span>
                                                            </li>
                                                        }
                                                    }
                                                </ul>
                                            </li>
                                        }
                                    </ul>
                                </li>
                            }
                        }
                    </ul>
                    <div class="OrganizationName">@SessionCommData.LoginOrganization.Name</div>

                </div>

                <!-- 主题内容部分 -->
                <div class="content-wrapper" id="content-wrapper" style="min-height: 421px;padding:0;flex: 1; margin-left: 0;position: initial;z-index:1000;">
                    <div id="myTabContent" class="content-iframe ">
                        <div class="tab-content " id="tab-content">

                        </div>
                    </div>
                    <!--首页内容-->
                    @*@Html.Action("IndexPage", "Main")*@
                </div>
            </div>
        </div>
    </form>

    <div class="task-box" style="display:none">
        <div class="task2">
            任务<span class="task-tips" id="task2-message-count">0</span>
        </div>
        <div class="bubble1">
            <b>重新接收任务</b>
            <p>进入任务列表 > 打开详情 > 点击接收</p>
            <button class="btn" type="button" onclick="$('.task-box').hide();">知道了</button>
        </div>
    </div>

    @*系统更新说明弹出层*@
    <div class="modal fade UpdateExplanationModal" tabindex="1001" role="dialog" aria-labelledby="myLargeModalLabel">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content" id="div_UpdateLogContent">

            </div>
        </div>
    </div>
    @*系统更新说明弹出层end*@



    @*无头部弹出层*@
    @Html.Partial("~/Views/Helper/Container.cshtml")
    @*无头部弹出层end*@


    <!--用户名点击图标切换显示登内容-->


    <script type="text/javascript">

        function showTaskLi() {
            let sub = document.querySelector(".task-box");
            let parent = document.querySelector(".task-li");
            let task2 = document.querySelector(".task2")

            sub.style.top = calcOffsetTop(parent) + 6 + "px";
            sub.style.left = calcOffsetLeft(parent) + parseInt(parent.clientWidth / 2) + "px";
            sub.style.display = "flex";
            sub.style.zIndex = 2001;
            task2.style.width = parent.clientWidth - 8 + "px";
            task2.style.height = parent.clientHeight - 8 + "px";

            $("#task2-message-count").text($("#messageID").text());
        }

        function calcOffsetLeft(el) {
            if (el.offsetParent) {
                return el.offsetLeft + calcOffsetLeft(el.offsetParent)
            } else {
                return 0
            }
        }

        function calcOffsetTop(el) {
            if (el.offsetParent) {
                return el.offsetTop + calcOffsetTop(el.offsetParent)
            } else {
                return 0
            }
        }

        function showSelect(ctl) {
            $(ctl).next().slideToggle(100);
            $(ctl).children(".trangle").toggleClass('icon_change');
            $(".dropdown-menu").mouseleave(function () {
                $(".dropdown-menu").css("display", "none");
                $("#trangle-remove").removeClass('icon_change');
                $("#sel_LoginOrg_divShow").css("display", "none");
                $("#sel_LoginOrg_divShow").on("mouseover", function () {
                    $("#sel_LoginOrg_divShow").css("display", "block");
                    $(".dropdown-menu").css("display", "block");

                    $("#trangle-remove").addClass('icon_change');
                })
            });
        }
        $(".select_text").click(function () {
            $(".select_text").next().hide();
            $(this).next().toggle();
        })
    </script>

    <script type="text/javascript">
        var langBag = @Html.Raw(ViewBag.LangPackageJson);
        var viewInfo = "@ViewBag.ViewInfo";

        var tabRelation = {}; ///这是一个Json对象，用于记录Tab页之间的父子关系，在一个tab页中创建新的tab页时往对象中插入数据
        var modalWindowParams = {}; ///这个Json对象保存的是弹窗的传入参数，在子页面打开后可以调用getModalWindowParam方法获取
        var openId = "@ViewBag.userOpenid";
        var orgIdTemp = '@SessionCommData.User.LoginOrganization.ID';

        var curLang = '@Session["Language"].ToString()';

        var updateLog = @Html.Raw(ViewBag.UpdateLog);
        var deployMode = @ViewBag.DeployMode ;
        let authorizeTips = @Html.Raw(ViewBag.AuthorizeTips);

        let messageGroup = []; ///消息组，用于处理需要在加载主页的时候需要做的附加操作，里面保存的是要执行的方法
        let updateArray = []; ///升级提示的内容数组

        $(window).resize(function () { //当浏览器大小变化时
            //三级导航
            $(".threeLevelMenu").css("height", $(window).height() - 40);
            //三级导航end

        });

        $(function () {

            //三级导航
            $(".threeLevelMenu").css("height", $(window).height() - 40);
            //三级导航end


            ///生成默认语言信息
            saveFormControlInfo(viewInfo ,getFormControlText());

            if (langBag != undefined) {
                formControlTransfer(langBag);///加载控件的多语言信息
            }

            lstStore = new AEMSListBox();
            lstStore.Init({
                DataSource: @(Html.Raw(ViewBag.OrgList)),
                Element: $("#sel_LoginOrg"),
                TextElement: $("#sel_LoginOrg_text"),
                ValueElement: $("#sel_LoginOrg_value"),
                Filter:true,
                CurValue:"@SessionCommData.OrganizationID",
                SelectedChange: function(curVal){
                    if (orgIdTemp != curVal) {
                        document.location = "/Login/LoginToOrg?OrgId=" + curVal;
                    }
                }
            });

            //$("li[data-status='0']").prepend("<b>" + getMessageForLang('StoreStatus_0', '睡眠') + "</b>.");
            //$("li[data-status='1']").prepend("<b>" + getMessageForLang('StoreStatus_1', '激活') + "</b>.");
            //$("li[data-status='2']").prepend("<b>" + getMessageForLang('StoreStatus_2', '关闭') + "</b>.");

            $("#spanCurLang").text($(".swtich-Lang[data-value='" +curLang + "']").text()); ///设置当前语言
            $(".swtich-Lang").click(function(){
                $("#spanCurLang").text($(this).text());
                var langData = $(this).data("value");
                Query("/Main/SwitchLanguage","Lang=" + langData,function(data){
                    setCookie("LanguageData", langData,30);
                    document.location.reload(true);
                });
            });

            //吐槽框
            $('#isshow_tucao').mouseenter(function(e){
                e.stopPropagation();
                $('.tucao-frame').addClass('show');

            });
            $('#spanNotice,.user-menu,.spanApprove').mouseenter(function(){
                $('.tucao-frame').removeClass('show');
            })
            $('.tucao-frame').mouseleave(function(){
                $(this).removeClass('show');
            });
            $('#Options').children('.Options-one').on('click',function(){
                window.top.openModal(getMessageForLang("Options-one","我要吐槽"), "/Main/Feedback" , true);
            })
            $('#Options').children('.Options-two').on('click',function(){
                showUpdateLog(false); ///显示更新日志
            })

            ///初始状态下隐藏下拉菜单
            $(".dropdown-menu").hide();

            showHomePage(1);///登录后先显示首页

            App.setbasePath("../");
            App.setGlobalImgPath("Content/images/");

            ///查询未读消息数量
            NotifyReadyTaskAction();

            ///页面加载的时候先获得当前的工作流待办数量
            queryWfReadyTasks();

            //InitMQConn();

            WXBindShowText();

            $(".twonav").hide();

            let showNav = function () {
                    NavigationGuidelines(updateArray)
            };
            let showUpdate = function () {
                    showUpdateLog(true)
            };
            let showTips = function () {
                    showAuthorizeTips(authorizeTips["ChannelName"], authorizeTips["ExpireDate"]);
            };
            let menuEvent = function () {
                threeLevelMenu();
                $(".thirdLayer").hide(); ///隐藏所有三级模块（默认是显示的，不然无法实现更新引导提示）
            };

            ///如果没有查看更新，则显示当前版本的更新内容
            if (!!updateLog && updateLog.length > 0) {
                let data = updateLog.filter(function (e) { return e.Name != ""; });

                //过滤不匹配的
                $(".threeLevelMenu>ul>li>.secondLayer>li>.thirdLayer>li").each(function (index, item) {
                    var modelname = $(item).attr("data-modelname");
                    for (var i in data) {
                        if (data[i].Module == modelname) {
                            updateArray.push(data[i]);
                        }
                    }
                })
                
                if (updateArray.length > 0) {
                    messageGroup.push(showNav);
                    messageGroup.push(showUpdate);
                } else {
                    messageGroup.push(showUpdate);
                }
            }
           

            ///显示授权提醒窗口
            var arr = Object.keys(authorizeTips);
            if (arr.length > 0) {
                let tipDate = getCookie("channel_expire_tips");
                if (!tipDate || tipDate != crrDate(true)) {
                    messageGroup.push(showTips);
                }
            }

            messageGroup.push(menuEvent);

            messgeGroup_Next();

            /////可以处理跨域iframe窗口间通过window.top.postMessage进行通讯时的参数传递
            //window.addEventListener('message', function (msg) {
            //    transferData(msg.data.msg, "-", msg.data.url, "receiveMsg");
            //})
        });

        ///按照消息组中的顺序调用
        function messgeGroup_Next() {
            if (messageGroup.length > 0) {
                var func = messageGroup[0];
                messageGroup.splice(0, 1);
                func(); ///调用对应的方法
            }

        }

        //左边导航栏新功能指引
        var isGuidelines = true;
        function NavigationGuidelines(data){
            $(".threeLevelMenu>ul>li>.secondLayer").removeClass("focus");
            $("#NavigationGuidelinesBack").show();
            $(".threeLevelMenu>ul>li>.secondLayer>li>.thirdLayer>li").each(function(index,item){
                if(isGuidelines){
                    var modelname = $(item).attr("data-modelname");
                    for(var i in data){
                        if(modelname == data[i].Module){
                            isGuidelines = false;
                            $(item).addClass("GuideActive");
                            var btnText = getMessageForLang("NextStep", "下一步");
                            var dataIText = data[i].Text;
                            data.splice(i, 1);
                            if(data.length == 0){
                                btnText = getMessageForLang("Complete", "完成");
                            }
                            data = JSON.stringify(data)
                            var html = "<div class='bubble'><b>"+getMessageForLang("NewFunction", "新功能")+"</b><p>"+dataIText+"</p><button onclick='NavigationGuidelinesNext(this,"+ data +")'>"+ btnText +"</button></div>";
                            $(item).after(html);
                            $(item).parent().parent().parent().show();
                            $(item).parent().parent().parent().addClass('focus');
                            $(".bubble").on("click", function (event) {
                                event.stopPropagation(); //防止冒泡
                            })
                            var boxHight = $(".threeLevelMenu").outerHeight();
                            //var ulHight = $(".threeLevelMenu .secondLayer").outerHeight(true);
                            var ulHight = $(".threeLevelMenu .secondLayer.focus")[0].scrollHeight;
                            var positionTop = $(item).offset().top;  //获取焦点距离父元素的高度
                            console.log("positionTop:" + positionTop);
                            if (positionTop < 300) {
                                return;
                            }
                            //焦点距离父元素超过300才执行
                            if (ulHight > boxHight && positionTop > boxHight-100) {  //如果出现滚动条
                                var maxDragBar = ulHight-boxHight;  //算出滚动条最大高度
                                $(".threeLevelMenu .secondLayer.focus").scrollTop(maxDragBar);  //直接滚到底
                                var newsMarginTop = $(".bubble").css("margin-top");
                                newsMarginTop = parseInt(newsMarginTop);
                                newsMarginTop = newsMarginTop-maxDragBar; //把多出来的滚动条高度加到样式里
                                $(".bubble").css("margin-top",newsMarginTop + "px");
                            }
                            return;
                        }
                    }
                }else{
                    return;
                }
            })
        }

        //三级菜单相关方法
        function threeLevelMenu() {
            $(".threeLevelMenu").mouseleave(function () {//鼠标离开
                $(".threeLevelMenu>ul>li>.secondLayer").hide();
            })
            $(".threeLevelMenu>ul>li").hover(function (event) {
                event.stopPropagation(); //防止冒泡
                var isActive = $(this).hasClass("active");
                if (isActive) { ///这个分支看起来并不起作用
                    $(this).find(".secondLayer").toggle(); 
                }
                else {
                    $(".threeLevelMenu>ul>li").removeClass("active");
                    $(this).addClass("active");
                    $(".threeLevelMenu>ul>li>.secondLayer").hide();
                    $(this).find(".secondLayer").show();
                }

                if ($(this).find(".secondLayer").find(".thirdLayer:visible").length == 0) {
                    $(this).find(".thirdLayer").first().show(); ///展开第一个
                    $(this).find(".title-arrow").first().removeClass("icon-icn-trangle-down");
                    $(this).find(".title-arrow").first().addClass("icon-icn-trangle-up");
                }
            },
                function (event) {
                    event.stopPropagation(); //防止冒泡
                    $(".threeLevelMenu>ul>li").removeClass("active");
                    $(".threeLevelMenu>ul>li>.secondLayer").hide();
                })

            $(".threeLevelMenu>ul>li>.secondLayer>li>.thirdLayer>li").on("click", function (event) {
                event.stopPropagation(); //防止冒泡
                $(".threeLevelMenu>ul>li>.secondLayer").hide();
            })

            $(".secondLayer>li>p").on("click", function (event) {
                event.stopPropagation();

                $(this).next("ul").toggle(); ///显示和隐藏三级菜单区域

                if ($(this).next("ul").is(":visible"))
                    $(this).switchClass("icon-icn-trangle-down", "icon-icn-trangle-up");
                else
                    $(this).switchClass("icon-icn-trangle-up", "icon-icn-trangle-down");
            });
        }

        //点击指引按钮后
        function NavigationGuidelinesNext(event, data) {
            //防止冒泡
            if (event.stopPropagation) {
                // 针对 Mozilla 和 Opera
                event.stopPropagation();
            }
            else if (window.event) {
                // 针对 IE
                window.event.cancelBubble = true;
            }
            isGuidelines = true;
            $(event).parent().parent().parent().parent().hide();
            $(event).parent().prev().removeClass("GuideActive");
            $(event).parent().remove();
            if(data.length == 0){
                //点击完成后
                $(".threeLevelMenu>ul>li>.secondLayer").removeClass("focus");
                $(".threeLevelMenu>ul>li>.secondLayer").hide();
                $("#NavigationGuidelinesBack").hide();

                messgeGroup_Next(); ///处理下一组
                //showUpdateLog(true); ///显示更新日志

                //threeLevelMenu();
                return;
            }else{
                //点击下一步后
                NavigationGuidelines(data);
            }
        }

        ///显示更新日志
        function showUpdateLog(needUpdate)
        {
            $("#div_UpdateLogContent").css("height", "610px");
            $("#div_UpdateLogContent").load("/Main/UpdateLog");
            $(".UpdateExplanationModal").modal("show");
            $(".UpdateExplanationModal").on('hidden.bs.modal', function (e) {
                messgeGroup_Next();
            });

            if (needUpdate)
                Query("/Main/UpdateLogRead", null); ///标记该用户已阅读该更新日志，下次将不会自动弹出显示
        }

        ///显示授权提示窗口
        function showAuthorizeTips(name, expDate) {
            $("#div_UpdateLogContent").css("height", "470px");
            $("#div_UpdateLogContent").load("/Main/AuthorizeTips?ChannelName=" + encodeURI(name) + "&ExpireDate=" + expDate);
            $(".UpdateExplanationModal").modal("show");
            $(".UpdateExplanationModal").on('hidden.bs.modal', function (e) {
                messgeGroup_Next();
            });
        }

        function getSelectedOrgItem(source) {
            if (orgIdTemp != $(source).data("key")) {
                //$(source).parent().prev().html($(source).html()+"<span class='icon-icn-trangle-up trangle' id='trangle_1'></span>");
                //$("#trangle_1").toggleClass('icon_change');
                document.location = "/Login/LoginToOrg?OrgId=" + $(source).data("key");
            }
            //alert($(source).data("key"));
        }

        //初始MQ连接
        function InitMQConn() {
            $.ajax({
                url: "/InitMQConn/InitMQ", // 后台处理程序
                type: 'post', // 数据发送方式
                contentType: "application/x-www-form-urlencoded", ///如果设置成text/xml 或者 application/json; charset=utf-8 将导致后台用Request获取不到数据
                dataType: 'json', // 接受数据格式
                success: function (data) {
                    console.log("InitMQConn初始MQ连接成功");
                    ///如果返回状态正确则进行回调，由页面Js函数来处理页面数据的动态加载
                    if (data.Status == 1) {
                        ///加载消息并监听MQ队列
                        getData('@SessionCommData.LoginOrganization.ID', '@SessionCommData.User.LoginEmployee.ID');
                        ///加载待办并监听MQ队列
                        loadWfReadyTasks('@SessionCommData.LoginOrganization.ID', '@SessionCommData.User.LoginEmployee.ID');
                    }
                },
                error: function(jqXHR, textStatus, errorThrown) {
                    //这里的jqXHR.responseText就是弹出返回的错误信息
                    alert(jqXHR.responseText);
                }
            });
        }

        function WXBindShowText() {
            if (openId != "") {
                $('#BindText').html(getMessageForLang('BindWeChatFinish', '已绑定微信'));
                $('#SelectWXBind').html(getMessageForLang('UnBindWeChat','解除绑定'));
                $('#SelectWXBind').attr("data-Bind", "2");
            } else {
                $('#BindText').html(getMessageForLang('NotBoundWeChat','未绑定微信'));
                $('#SelectWXBind').html(getMessageForLang('Bind','立即绑定'));
                $('#SelectWXBind').attr("data-Bind", "1");
            }
        }

        ///切换一级菜单的展开与收缩
        function ToggleMenuGroup(menuTitleElement) {
            if($(menuTitleElement).parent().find(".twonav .li-list-third .twonav").length > 0){
                $(menuTitleElement).parent().find(".twonav .li-list-third .twonav").toggle(0);
            }
            $(menuTitleElement).parent().find(".twonav").toggle(0);
            $(menuTitleElement).parent().siblings().find(".twonav").hide();
            $(menuTitleElement).parent().siblings().find(".icon-icn-trangle-up").removeClass("current-trangle");
            $(menuTitleElement).parent().siblings().find(".icon-icn-trangle-up").addClass("trangle");

            //选中的时候设置样式
            $(menuTitleElement).parent().parent().find("a[name='topMenu']").removeClass("current");

            if ($(menuTitleElement).find(".icon-icn-trangle-up").hasClass("current-trangle")) {
                $(menuTitleElement).find(".icon-icn-trangle-up").removeClass("current-trangle");
                $(menuTitleElement).find(".icon-icn-trangle-up").addClass("trangle");
            }
            else {
                $(menuTitleElement).find(".icon-icn-trangle-up").removeClass("trangle");
                $(menuTitleElement).find(".icon-icn-trangle-up").addClass("current-trangle");

                //选中的时候设置样式
                $(menuTitleElement).addClass("current");
            }
        }

        function openMenu(id, title, url) {
            if(title == "数据大屏")
            {
                $.post("/Main/GetDashBoardParams",null,function(data, textStatus, jqXHR)
                {
                    if(data != "")
                    {
                        window.open(url + "?" + data);
                    }
                    else
                    {
                        toastr.warning("生成参数信息错误,无法访问");
                        return;
                    }
                });
            }
            else
            {
                var option = {};

                option.id = id;
                option.title = title;
                option.url = url;
                option.top = true; ///表示顶级窗口，没有父窗口
                addTabPage(option);
            }
        }

        ///切换首页和多Tab页
        function showHomePage(isShow) {
            if (isShow == 1) {
                //$("#div_HomePage").show();
                var option = {};
                option.id = '001';
                option.title = getMessageForLang('Homepage', '首页');
                option.url = '/HomePageReport/Index';
                option.close = false;
                option.top = true; ///表示顶级窗口，没有父窗口

                addTabPage(option);
            }
            else {
                $("#div_HomePage").hide();
            }
        }
        //中间半透明窗层
        function showTranslucentModal(url, title, className, width, height, zIndex, hideBrowserOpen) {
            $(".browser-open").data("url", url + "&showBrowser=1&title=" + encodeURI(title));

            $(".TranslucentModal-load").load(url, function () {
                $(".TranslucentModal").addClass(className);
                $(".TranslucentModal-close").addClass(className + "-close");
                $("." + className).css({ "z-index": zIndex })
                $("." + className).find(".TranslucentModal-content").css({ "width": width + "px", "height": height + "px", "border-radius": "10px" })
                $("." + className).find(".TranslucentModal-title").text(title);
                $("." + className).modal("show");
            });
            $(".TranslucentModal-close").click(function () {
                $("." + className).modal("hide");
            })
            $(".browser-open").click(function () {
                window.open($(this).data("url"));
            });

            if (!!hideBrowserOpen)
                $(".browser-open").hide();
        };
        //无头部弹窗层
        function showSimpModal(url,className,width,height,zIndex) {
            $(".NoHeadModal-load").load(url, function () {
                $(".NoHeadModal").addClass(className);
                $(".NoHeadModal-close").addClass(className+"-close");
                $("." + className).css({"z-index": zIndex})
                $("." + className).find(".NoHeadModal-content").css({"width": width+"px","height": height+"px"})
                $("." + className).modal("show");
            });
            $(".NoHeadModal-close").click(function () {
                $("." + className).modal("hide");
            })
        };

        ///弹窗一个模态窗口（主要用户列表页进行新增、修改时调用），将窗口在最顶层弹出来避免被框架遮盖
        function openModal(title, url, isIframe, width, height, inParam,showHeader,showFooter) {
            if (isIframe == undefined)
                isIframe = false;

            if (width == undefined || width == null)
            {
                if (screen.width >= 1600)
                    width = 1100;
                else if (screen.width >= 1400)
                    width = 1000;
                else
                    width = 900;
            }

            if (height == undefined || height == null)
            {
                if (screen.height >= 1000)
                    height = 750;
                else if (screen.height >= 850)
                    height = 650;
                else
                    height = 500;
            }

            if (url == null || url == undefined)
                return;

            var temp = url;
            ///去掉QueryString
            if (url.indexOf("?") > -1)
                temp = url.substr(0, url.indexOf("?"));
            else
                temp = url;

            var child = getHashCode(temp, false);
            var parent = $(".modal-dialog:last iframe"); ///获得当前活动modal(最后面生成的modal)的iframe下的url
            if (parent.length > 0) {
                var parentUrl = parent.attr("src");
                tabRelation[child] = parentUrl;
            }
            else { ///找不到父级弹窗说明当前页面是tab页
                tabRelation[child] = getActivePageId();
            }

            ///如果有传入参数，则将传入参数放到JSON对象中
            var modalId = '_mdl_' + new Date().valueOf();

            if (inParam != undefined && inParam != null) {
                modalWindowParams[modalId] = inParam;
            }

            if (showHeader == undefined)
                showHeader = true;

            if (showFooter == undefined)
                showFooter = true;

            Ewin.dialog(
                {
                    title: title,
                    url: url,
                    iframe: isIframe,
                    width: width,
                    height: height,
                    modalId: modalId,
                    showHeader: showHeader,
                    showFooter: showFooter
                    //onReady: function () {
                    //    if (typeof (readyFunc) == "function")
                    //        readyFunc();
                    //},
                    //onShown: function (e) {
                    //    if (typeof (readyFunc) == "function")
                    //        shownFunc(e);
                    //}
                });
        }

        ///弹窗一个模态窗口（主要用户列表页进行新增、修改时调用），将窗口在最顶层弹出来避免被框架遮盖
        function openModalAwait(title, url, isIframe, width, height, inParam, showHeader, showFooter) {
            if (isIframe == undefined)
                isIframe = false;

            if (width == undefined || width == null) {
                if (screen.width >= 1600)
                    width = 1100;
                else if (screen.width >= 1400)
                    width = 1000;
                else
                    width = 900;
            }

            if (height == undefined || height == null) {
                if (screen.height >= 1000)
                    height = 750;
                else if (screen.height >= 850)
                    height = 650;
                else
                    height = 500;
            }

            if (url == null || url == undefined)
                return;

            var temp = url;
            ///去掉QueryString
            if (url.indexOf("?") > -1)
                temp = url.substr(0, url.indexOf("?"));
            else
                temp = url;

            var child = getHashCode(temp, false);
            var parent = $(".modal-dialog:last iframe"); ///获得当前活动modal(最后面生成的modal)的iframe下的url
            if (parent.length > 0) {
                var parentUrl = parent.attr("src");
                tabRelation[child] = parentUrl;
            }
            else { ///找不到父级弹窗说明当前页面是tab页
                tabRelation[child] = getActivePageId();
            }

            ///如果有传入参数，则将传入参数放到JSON对象中
            var modalId = '_mdl_' + new Date().valueOf();

            if (inParam != undefined && inParam != null) {
                modalWindowParams[modalId] = inParam;
            }

            if (showHeader == undefined)
                showHeader = true;

            if (showFooter == undefined)
                showFooter = true;

            return new Promise((r) => {
                window.top.on_dialog_result = r;
                Ewin.dialog(
                    {
                        title: title,
                        url: url,
                        iframe: isIframe,
                        width: width,
                        height: height,
                        modalId: modalId,
                        showHeader: showHeader,
                        showFooter: showFooter,
                        showCloseIco:false
                    });

            });
        }

        function getModalWindowParam(_modalId) {
            return modalWindowParams[_modalId];
        }

        ///添加新页面(主要用于打开新增、修改、查看页面)
        function addTabPage(option,closeParent,isClose) {
            if(isClose){
                $(".close").click();
            }
            showHomePage(0);

            var pageId = getHashCode(option.url, false); ///Math.random() * 200;
            var actPgId = getActivePageId();

            ///如果该页面不存在则新建tab，如果存在则激活
            if (findTabPanel(pageId) == null) {
                var temp = {};
                temp.id = pageId;

                if(option["close"] == undefined) ///如果option中没有定义close的行为，那么就设置为true
                    temp.close= true ;

                $.extend(option, temp);

                ///top=true表示从导航菜单打开的页面
                if (option.top == true)
                    tabRelation[pageId] = undefined;
                else
                    tabRelation[pageId] = actPgId;

                addTabs(option); ///调用app_iframe.js中的addTabs方法
            }
            else
            {
                activeTabByPageId(pageId);///激活Tab

                ///如果是列表，页面中有refreshData方法，则刷新数据，否则不刷新
                var $iframe = findIframeById(pageId);
                if ($iframe.length > 0 && $iframe[0].contentWindow.refreshData != undefined)
                    $iframe[0].contentWindow.refreshData();
            }

            ///closeParent=true表示需要关闭原窗口
            if(closeParent != undefined && closeParent)
            {
                var parentId = tabRelation[pageId];
                if(parentId != undefined)
                    tabRelation[pageId] = undefined;

                window.setTimeout(function(){
                    closeTabOnly(actPgId);
                },1000);

            }
        }

        ///根据modalId来找到对应的弹窗并且关闭
        function closeModal(modalId) {
            delete modalWindowParams[modalId]; ///关闭窗口时删除该对象
            $("#" + modalId).modal("hide");
        }

        ///关闭当前活动tab页面
        function closeActiveTab() {
            closeCurrentTab();///调用app_iframe.js中的closeCurrentTab方法关闭当前tab页面
        }

        ///获得当前获得窗口所属Tab的pageId
        function getParentTabId()
        {
            var tabId = "";
            var actPgId = getActivePageId();
            if (tabRelation[actPgId] != undefined)
                tabId = tabRelation[actPgId];

            return tabId;
        }

        ///在框架页中刷新当前活动iframe的列表页(如果要关闭弹窗，需要传入isClose=true和modId参数)
        function reloadList(isClose,modId,para) {
            var tabId;
            var actPgId = getActivePageId();
            if (tabRelation[actPgId] != undefined)
                tabId = tabRelation[actPgId];
            else ///刷新当前活动窗口
                tabId = actPgId ;

            var $iframe = findIframeById(tabId);
            if ($iframe.length > 0 && $iframe[0].contentWindow.refreshData != undefined)
                $iframe[0].contentWindow.refreshData(para);

            if (isClose) ///需要在刷新列表后关闭之前的tab
            {
                ///延迟关闭，直接调用closeWin方法关闭窗体会出现Js错误
                window.setTimeout(function(){
                    if (modId != undefined && modId != "") ///关掉弹窗
                        closeModal(modId);
                    else if (tabRelation[actPgId] != undefined) { ///关掉Tab页
                        activeTabByPageId(tabRelation[actPgId]);
                        closeTabOnly(actPgId);
                    }
                },1000);
            }
        }

        ///延迟关闭
        function closeModalLazy(modId)
        {
            window.setTimeout(function () {
                if (modId != undefined && modId != "") ///关掉弹窗
                    $("#" + modId).modal("hide");
            }, 1000);
        }

        ///iframe之间传递数据
        function transferData(data, sourceUrl, targetUrl, targetMethod) {
            if(targetMethod == null || targetMethod == undefined || sourceUrl == null || sourceUrl == undefined)
                return ;

            if (targetUrl == null || targetUrl == undefined) {
                ///根据sourceUrl找到对应的父亲
                var child = getHashCode(sourceUrl, false);
                targetUrl = tabRelation[child];

                if (targetUrl == null || targetUrl == undefined)
                    return;
            }

            ///targetUrl可能是一个地址，也可能是一个 tab的pageId
            ///如果是地址则必须包含/
            if (targetUrl.indexOf("/") == -1) {
                var $iframe = findIframeById(targetUrl);
                if ($iframe.length > 0)
                    $iframe[0].contentWindow[targetMethod](data);
            }
            else {
                ///找到匹配当前targetUrl的iframe，为什么不用=搜索，因为src在创建弹窗的时候会自动动态参数
                $("iframe[src^='" + targetUrl + "']").each(function () {
                    //var src = $(this).attr("src");
                    $(this)[0].contentWindow[targetMethod](data);
                    return false;
                });
            }
        }

        ///将当前页面重新跳转到一个新地址
        function iFrameRedirect(newTitle, newUrl)
        {
            showWait(); ///显示等待
            var pid = getActivePageId();
            var $iframe = findIframeById(pid);

            $iframe.attr("src", newUrl);

            $iframe.load(function () {
                hideWait(); ///隐藏等待
            });

            $("a.menu_tab[data-pageid='" + pid + "']").find("span.page_tab_title").text(newTitle);
        }

        ///切换当前弹窗的可关闭状态
        function toggleDialogCloseModel()
        {
            $(".modal-header:last").find(".close").toggle();
        }

        function logout()
        {
            $.get("/Main/Logout?rnd=" + Math.random());
        }

        function getData(storeId, userId) {
            var temp = '/exchange/ShiRuan.PromotionPublishTopic/' + storeId + '.' + userId;
            var client = Stomp.client('@ViewBag.MQURL');
            client.connect('aemsPublish', 'shiruan', function () {
                console.log('getData:'+temp + "," + userId);
                id = client.subscribe(temp, function (d) {
                    console.log('********MQ is ok********');

                    NotifyReadyTaskAction(); ///从数据看中查询未读消息数量

                    console.log(d.body);
                }, {
                    'x-queue-name': 'AEMS.'+userId,
                    'durable': true,
                    'auto-delete': false
                });
            }, function (err) {
                console.log(err);
            }, 'AEMSHost');
        }

        ///加载工作流待办数
        function loadWfReadyTasks(orgId,userId)
        {
            ///监听MQ，获得新的待办
            var temp = '/exchange/ShiRuan.PromotionPublishTopic/workflow.' + orgId + '.' + userId;
            var client = Stomp.client('@ViewBag.MQURL');
            client.connect('aemsPublish', 'shiruan', function () {
                console.log(temp + "," + userId);
                id = client.subscribe(temp, function (d) {
                    console.log('********MQ is ok********');

                    ///收到MQ的提醒后去调用接口去查询当前的待办数量
                    queryWfReadyTasks();

                }, {
                    'x-queue-name': 'AEMS.workflow.' + userId,
                    'durable': true,
                    'auto-delete': false
                });
            }, function (err) {
                console.log(err);
            }, 'AEMSHost');


        }

        ///查询待办数量
        function queryWfReadyTasks()
        {
            Query("/Workflow/TaskCenter/GetReadyTaskCount", null, function (count) {
                $("#span_wfCount").text(count); ///当前已有的待办
            });
        }

        function showNotices() {
            if (deployMode == 2) ///轻系统
                openMenu("A258E1DD-13E8-4946-87C1-A34CA833B436", getMessageForLang("NoticeList", "任务列表"), "/System/BusinessPush");
            else
                openMenu("4U07CC1EFWCN15NEELWL5GMJC3DUK5UW0SU8QJ", getMessageForLang("NoticeList", "任务列表"), "/Message/DistributeTask");
        }

        function showWorkflows() {
            openMenu("D59869D4-2D22-4A1A-B7CE-79738AF3BAE7", getMessageForLang("WorkflowCenter","审批中心"), "/Workflow/TaskCenter");

            queryWfReadyTasks(); ///点击的时候更新待办数目
        }

        function showCustomerServiceCenter() {
            openMenu("1111", "异常任务", "/Message/DistributeTaskCenter");
            //openMenu("1111", "开店管理", "/System/OrgBuilder");
        }

        function showOrgBuilder() {
            openMenu("2222", "开店管理", "/System/OrgBuilder");
        }

        ///操作流程通知数量
        function NotifyReadyTaskAction() {
            Query("/Message/DistributeTask/GetTaskCount", null, function (count) {
                //alert(count);
                $("#messageID").text(parseInt(count)); //当前已有的待办
                //$('#messageID').text(parseInt($('#messageID').text()) + count);
            });
        }

        //微信绑定DIV层
        $('#SelectWXBind').click(function () {
            var bind = $('#SelectWXBind').attr("data-Bind");
            console.log(bind);
            if (bind == "1") {
                window.top.openModal(getMessageForLang("BindWeChat","微信绑定"), "/Main/BindWeChat", true,770,500);
            } else {
                window.top.openModal(getMessageForLang("UnBindWeChat","微信解除绑定"), "/Main/UnBindWeChat", true,770,500);
            }
        });
        function ChangeAction(bindType) {
            if (bindType == 1) {
                //alert('closetest');
                $('#BindText').html(getMessageForLang('BindWeChatFinish','已绑定微信'));
                $('#SelectWXBind').html(getMessageForLang('UnBindWeChat','解除绑定'));
                $('#SelectWXBind').attr("data-Bind", "2");
            } else {
                //alert('closetest');
                $('#BindText').html(getMessageForLang('NotBoundWeChat','未绑定微信'));
                $('#SelectWXBind').html(getMessageForLang('Bind','立即绑定'));
                $('#SelectWXBind').attr("data-Bind", "1");
            }
        }

        //修改电话号码DIV层
        $('#ChangTel').click(function () {
            var TelNum = $('#SpanTel').text();
            window.top.openModal(getMessageForLang("ChangePhoneNum","更换手机号码"), "/Main/ChangePhone?Tel="+TelNum, true,770,500);
        });

        function ChangeTel(Tel) {
            $('#SpanTel').text(Tel);

        }
        //修改密码
        $('#ChangePWD').click(function() {
            var TelNum = $('#SpanTel').text();
            window.top.openModal(getMessageForLang("ChangePwd","修改密码"), "/Main/ChangePWD?Tel="+TelNum, true,770,500);
        });
    </script>
</body>

</html>
